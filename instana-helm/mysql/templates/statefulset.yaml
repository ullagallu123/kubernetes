apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    project: instana
    tier: mysql-db
spec:
  serviceName: "mysql"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: mysql
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          livenessProbe:
            exec:
              command:
                - "mysqladmin"
                - "ping"
                - "-h"
                - "localhost"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            exec:
              command:
                - "mysqladmin"
                - "ping"
                - "-h"
                - "localhost"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD

          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql

  volumeClaimTemplates:
    - metadata:
        name: mysql-storage
      spec:
        accessModes: {{ .Values.storage.accessModes | toJson }}
        resources:
          requests:
            storage: {{ .Values.storage.size }}
        storageClassName: {{ .Values.storage.storageClassName }}