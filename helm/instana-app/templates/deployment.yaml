apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.env }}-{{ .Values.name }}
  labels:
    {{- toYaml .Values.labels | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- toYaml .Values.labels | nindent 6 }}
  template:
    metadata:
      labels:
        {{- toYaml .Values.labels | nindent 8 }}
    spec:
      containers:
        - name: {{ .Values.env }}-{{ .Values.name }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag}}"
          ports:
            - containerPort: {{ .Values.service.port }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          {{- if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.health_check.path}}             
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}  
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}           
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}            
            successThreshold: {{ .Values.probes.liveness.successThreshold }}     
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.health_check.path}}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}      
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}            
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}           
            successThreshold: {{ .Values.probes.readiness.successThreshold }}   
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}         
          {{- end }}
           {{- if eq .Values.name "frontend" }}
          volumeMounts:
            - name: {{ .Values.env }}-{{ .Values.name }}
              mountPath: /etc/nginx/nginx.conf
              subPath: NGINX_CONF
          {{- else }}
          envFrom:
            - configMapRef:
                name: {{ .Values.env }}-{{ .Values.name }}
            {{- if .Values.secrets.enabled }}
            - secretRef:
                name: {{ .Values.env }}-{{ .Values.name }}
            {{- end }}
          {{- end }}

      {{- if eq .Values.name "frontend" }}
      volumes:
        - name: {{ .Values.env }}-{{ .Values.name }}
          configMap:
            name: {{ .Values.env }}-{{ .Values.name }}
      {{- end }}